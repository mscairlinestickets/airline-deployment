version: "3.9"

services:

  ticket-service:
    image: "ticket-service"
    container_name: "ticket-service"
    depends_on:
      - airline-postgres
    ports:
      - "9001:9001"
      - "8001:8001"
    environment:
      - BPL_JVM_THREAD_COUNT=50
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8001
      - JAVA_TOOL_OPTIONS=-javaagent:/workspace/BOOT-INF/lib/opentelemetry-javaagent-1.33.3.jar
      - OTEL_SERVICE_NAME=ticket-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_METRICS_EXPORTER=none
      - SPRING_PROFILES_ACTIVE=test
      - SPRING_DATASOURCE_URL=jdbc:postgresql://airline-postgres:5432/airlinedb_ticket
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
    networks:
      - airline-network

  booking-service:
    image: "booking-service"
    container_name: "booking-service"
    depends_on:
      - airline-postgres
    ports:
      - "9002:9002"
      - "8002:8002"
    environment:
      - BPL_JVM_THREAD_COUNT=50
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8002
      - JAVA_TOOL_OPTIONS=-javaagent:/workspace/BOOT-INF/lib/opentelemetry-javaagent-1.33.3.jar
      - OTEL_SERVICE_NAME=booking-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317
      - OTEL_METRICS_EXPORTER=none
      - SPRING_R2DBC_URL=r2dbc:postgresql://airline-postgres:5432/airlinedb_booking
      - SPRING_R2DBC_USERNAME=user
      - SPRING_R2DBC_PASSWORD=password
      - SPRING_FLYWAY_URL=jdbc:postgresql://airline-postgres:5432/airlinedb_booking
      - TICKET_CATALOG_FLIGHT_URI=http://ticket-service:9001
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka-airlines:9092
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
    networks:
      - airline-network

  airline-postgres:
    image: "postgres:14.12"
    container_name: "airline-postgres"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - airline-network

  zookeeper:
    image: docker.io/bitnami/zookeeper:3
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - airline-network

  kafka-airlines:
    image: wurstmeister/kafka
    container_name: "kafka-airlines"
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-airlines:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      - KAFKA_CREATE_TOPICS=booking-accepted:3:1
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - airline-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "9080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka-airlines
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-airlines:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka-airlines
      - zookeeper
    networks:
      - airline-network

  grafana:
    image: grafana/grafana-oss:10.4.3
    container_name: grafana
    depends_on:
      - loki
      - tempo
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - ./observability/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./observability/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./observability/grafana/grafana.init:/etc/grafana/grafana.init
    networks:
      - airline-network

  loki:
    image: grafana/loki:2.9.8
    container_name: "loki"
    depends_on:
      - fluent-bit
    ports:
      - "3100:3100"
    networks:
      - airline-network

  fluent-bit:
    image: grafana/fluent-bit-plugin-loki:2.9.8
    container_name: "fluent-bit"
    ports:
      - "24224:24224"
    environment:
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    volumes:
      - ./observability/fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
    networks:
      - airline-network

  tempo:
    image: grafana/tempo:2.5.0
    container_name: tempo
    command: --config.file=/etc/tempo-config.yml
    ports:
      - "3110:3100"     # Tempo
      - "4317:4317"     # OTel
    volumes:
      - ./observability/tempo/tempo.yml:/etc/tempo-config.yml
    networks:
      - airline-network

  prometheus:
    image: quay.io/prometheus/prometheus:v2.52.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - airline-network

networks:
  airline-network: